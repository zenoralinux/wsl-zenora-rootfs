name: Build Zenora WSL Appx

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      DISTRO_NAME: Zenora
      CONFIGURATION: Release
      ROOTFS_URL: https://github.com/zenoralinux/wsl-zenora-rootfs/releases/download/20250603-0835/zenora-wsl-rootfs.tar.gz
      CERT_PASSWORD: 1234

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Download and prepare WSL DistroLauncher
        shell: pwsh
        run: |
          git clone https://github.com/microsoft/WSL-DistroLauncher.git DistroLauncher
          Invoke-WebRequest -Uri "$env:ROOTFS_URL" -OutFile "DistroLauncher/DistroLauncher-Appx/install.tar.gz"

      - name: Patch project files for toolset and SDK
        shell: pwsh
        run: |
          $projects = @(
            "DistroLauncher/DistroLauncher/DistroLauncher.vcxproj",
            "DistroLauncher/DistroLauncher-Appx/DistroLauncher-Appx.vcxproj"
          )
          foreach ($proj in $projects) {
            (Get-Content $proj) -replace 'v141', 'v143' -replace '10\.0\.16299\.0', '10.0.19041.0' | Set-Content $proj
          }

      - name: Generate temporary signing certificate
        shell: pwsh
        run: |
          $cert = New-SelfSignedCertificate -Type CodeSigningCert -Subject "CN=Zenora" -CertStoreLocation "Cert:\CurrentUser\My"
          $secure = ConvertTo-SecureString -String $env:CERT_PASSWORD -AsPlainText -Force
          Export-PfxCertificate -Cert $cert -FilePath "DistroLauncher/DistroLauncher-Appx/Zenora.pfx" -Password $secure

      - name: Inject signing config into project file
        shell: pwsh
        run: |
          $projPath = "DistroLauncher/DistroLauncher-Appx/DistroLauncher-Appx.vcxproj"
          $xml = [xml](Get-Content $projPath)
          $ns = New-Object System.Xml.XmlNamespaceManager($xml.NameTable)
          $ns.AddNamespace("ns", $xml.DocumentElement.NamespaceURI)

          $newGroup = $xml.CreateElement("PropertyGroup", $xml.DocumentElement.NamespaceURI)
          $certFile = $xml.CreateElement("PackageCertificateKeyFile", $xml.DocumentElement.NamespaceURI)
          $certFile.InnerText = "Zenora.pfx"
          $certPass = $xml.CreateElement("PackageCertificatePassword", $xml.DocumentElement.NamespaceURI)
          $certPass.InnerText = $env:CERT_PASSWORD
          $newGroup.AppendChild($certFile)
          $newGroup.AppendChild($certPass)
          $xml.DocumentElement.AppendChild($newGroup)
          $xml.Save($projPath)

      - name: Build Launcher
        shell: cmd
        run: |
          cd DistroLauncher
          msbuild DistroLauncher.sln /p:Configuration=Release /p:Platform=x64

      - name: Package .appx manually
        shell: pwsh
        run: |
          mkdir AppxStage
          Copy-Item "DistroLauncher/DistroLauncher-Appx/*" -Recurse -Destination AppxStage
          Copy-Item "DistroLauncher/x64/Release/launcher.exe" AppxStage

          makepri new /ProjectRoot AppxStage /ConfigXml AppxStage\AppxManifest.xml /OutputFile AppxStage\resources.pri
          makeappx pack /d AppxStage /p Zenora.appx

      - name: Upload .appx file
        uses: actions/upload-artifact@v4
        with:
          name: zenora-appx
          path: Zenora.appx

